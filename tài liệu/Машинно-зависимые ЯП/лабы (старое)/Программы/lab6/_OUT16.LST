Microsoft (R) Macro Assembler Version 5.10                  12/17/13 29:13:5
                                                             Page     1-1


       1				;С0Т Ц вывод пунктов меню с номерами 0.
					.8
       2				
       3				PUBLIC	PR_Out16
       4				EXTRN	PR_NewLine:NEAR
       5				
       6				
       7				
       8				
       9				
      10				
      11 0000				Code	SEGMENT	PUBLIC
      12					ASSUME CS:Code
      13				;--------------------------------------
					---------------------------------------
					---------
      14				;ѕечатает переменную, переданную через 
					стек, как шестнадцатиричное число без з
					нака (15 как E, -15 как FFF1)
      15				;--------------------------------------
					---------------------------------------
					---------
      16 0000				PR_Out16	PROC	NEAR
      17 0000  55				PUSH	BP		;переда
					ем параметр
      18 0001  8B EC				MOV		BP,SP
      19 0003  50				PUSH	AX		;исполь
					зуем дл€ делени€
      20 0004  52				PUSH	DX
      21 0005  53				PUSH	BX
      22					
      23 0006  8B 46 04				MOV		AX,[BP+4]
						;получаем в ј’ число, которое н
					адо распечатать
      24 0009  BB 0010				MOV		BX,16	
						;делить будем на 16; BX целиком
					 чтобы возникало деление двойного слова
					 (и не возникало переполнени€)
      25					
      26					;а теперь, алгоритм следующий: 
					предположим в ј’ лежит шестнадцатерично
					е A1C, тогда вначале мы выделим место п
					од это число,
      27					;то есть > ___ , а потом будем 
					печатать со сдвигом влево: > __C , > _1
					C , > A1C
      28 000C  50				PUSH	AX	;сохраним ј’, п
					отому что нам его два раза печатать
      29				
      30 000D					LO16_Div1:
      31 000D  BA 0000					MOV		DX,0
      32 0010  F7 F3					DIV		BX
      33 0012  50					PUSH	AX	
							;сохраним значение AX (
Microsoft (R) Macro Assembler Version 5.10                  12/17/13 29:13:5
                                                             Page     1-2


					цела€ часть)
      34 0013  B4 02						MOV	
						AH,2	;печатаем пропуск
      35 0015  B2 61						MOV	
						DL,'a'
      36 0017  CD 21						INT	
						21h
      37 0019  58					POP		AX
							
      38 001A  3D 0000					CMP		AX,0
      39 001D  75 EE				JNE		LO16_Div1
      40					
      41 001F  B4 02				MOV	AH,2
      42 0021  B2 08				MOV DL,8	;делаем один от
					кат назад
      43 0023  CD 21				INT 21h
      44					
      45 0025  58				POP		AX
      46 0026					LO16_Div2:
      47 0026  BA 0000					MOV		DX,0
      48 0029  F7 F3					DIV		BX
      49 002B  50					PUSH	AX	
							;сохраним значение AX (
					цела€ часть)
      50 002C  B4 02						MOV	
						AH,2
      51 002E  80 FA 09						CMP	
						DL,9
      52 0031  77 06						JA	
						LO16_AddA
      53 0033  80 C2 30							ADD
							DL,'0'	;печатаем значе
					ние DX (остаток)
      54 0036  EB 07 90							JMP
							LO16_Add0
      55 0039							LO16_AddA:
      56 0039  80 C2 41							ADD
							DL,'A'
      57 003C  80 EA 0A							SUB
							DL,10
      58 003F							LO16_Add0:
      59 003F  CD 21						INT	
						21h
      60 0041  B2 08						MOV	
						DL,8	;смещаемс€ назад ƒ¬ј∆ƒџ
      61 0043  CD 21						INT	
						21h
      62 0045  CD 21						INT	
						21h
      63 0047  58					POP		AX
      64 0048  3D 0000					CMP		AX,0
      65 004B  75 D9				JNE		LO16_Div2
      66					
      67					
Microsoft (R) Macro Assembler Version 5.10                  12/17/13 29:13:5
                                                             Page     1-3


      68 004D  5B				POP		BX
      69 004E  5A				POP		DX
      70 004F  58				POP		AX
      71 0050  5D				POP		BP
      72 0051  C3				RET
      73				
      74 0052  C3				RET
      75 0053				PR_Out16	ENDP
      76				;--------------------------------------
					---------------------------------------
					---------
      77 0053				Code	ENDS
      78				
      79				END
Microsoft (R) Macro Assembler Version 5.10                  12/17/13 29:13:5
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	0053	PARA	PUBLIC	

Symbols:            

                N a m e         	Type	 Value	 Attr

LO16_ADD0  . . . . . . . . . . .  	L NEAR	003F	CODE
LO16_ADDA  . . . . . . . . . . .  	L NEAR	0039	CODE
LO16_DIV1  . . . . . . . . . . .  	L NEAR	000D	CODE
LO16_DIV2  . . . . . . . . . . .  	L NEAR	0026	CODE

PR_NEWLINE . . . . . . . . . . .  	L NEAR	0000		External
PR_OUT16 . . . . . . . . . . . .  	N PROC	0000	CODE	Global	Length = 0053

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  _out16		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     79 Source  Lines
     79 Total   Lines
     16 Symbols

  47406 + 461901 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
