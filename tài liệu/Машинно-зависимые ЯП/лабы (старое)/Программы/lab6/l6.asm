;—оставить программу, выполн€ющую в цикле, работы, соответствующие вводимому символу:
;С0Т Ц вывод пунктов меню с номерами 0..8
;С1Т Ц ввод (в основной программе) с клавиатуры дес€тичного целого, возможно, со знаком минус, преобразование  (в процедуре-функции) во внутреннее представление 
;и размещение (в основной программе) в 2-байтовой €чейке X.
;С2Т Ц вывод на экран с новой строки значени€ из €чейки ’ в форме двоичного целого без знака и без лидирующих нулей (использовать команды сдвига).
;С3Т Ц вывод на экран с новой строки значени€ из €чейки ’ в форме двоичного целого со знаком и без лидирующих нулей (использовать команду NEG и процедуру 
;предыдущего пункта).
;С4Т Ц вывод на экран с новой строки значени€ из €чейки ’ в форме дес€тичного целого без знака (использовать команду делени€).
;С5Т Ц вывод на экран с новой строки значени€ из €чейки ’ в форме дес€тичного целого со знаком (использовать команду NEG и процедуру предыдущего пункта).
;С6Т Ц вывод на экран с новой строки значени€ из €чейки ’ в форме шестнадцатеричного целого без знака (использовать команды циклического сдвига и конъюнкции).
;С7Т Ц вывод на экран с новой строки значени€ из €чейки ’ в форме шестнадцатеричного целого со знаком (использовать команду NEG и процедуру предыдущего пункта).
;С8Т Ц завершение работы программы.
;ƒл€ перехода на новую строку экрана составить и использовать процедуру.
;ƒЋя ¬џ«ќ¬ј ¬—≈’ ѕ–ќ÷≈ƒ”– 2..7 ¬ ќ—Ќќ¬Ќќ… ѕ–ќ√–јћћ≈,  »—ѕќЋ№«ќ¬ј“№ ќƒЌ”  ќћјЌƒ” CALL »  ќ—¬≈ЌЌ”ё јƒ–≈—ј÷»ё ѕќ ѕјћя“».
;ƒЋя ¬—≈’ ѕ–ќ÷≈ƒ”– »—ѕќЋ№«ќ¬ј“№ —ќ√ЋјЎ≈Ќ»я TURBO C ѕќ —¬я«џ¬јЌ»ё ѕќƒѕ–ќ√–јћћ.


EXTRN	PR_PrintMenu:NEAR
EXTRN	PR_InputInt:NEAR
EXTRN	PR_Out2:NEAR
EXTRN	PR_Out2S:NEAR
EXTRN	PR_Out10:NEAR
EXTRN	PR_Out10S:NEAR
EXTRN	PR_Out16:NEAR
EXTRN	PR_Out16S:NEAR

PUBLIC	PR_NewLine, sEnter


Data	SEGMENT	PUBLIC
	Funcs		DW	PR_PrintMenu, PR_InputInt, PR_Out2, PR_Out2S, PR_Out10, PR_Out10S, PR_Out16, PR_Out16s
	X			DW	8
	sEnter		DB	'> ', '$'
Data	ENDS





Code	SEGMENT	PUBLIC
	ASSUME CS:Code, DS:Data, SS:Stack
	
PR_NewLine	PROC	NEAR
	PUSH	AX
	PUSH	DX
	
	MOV		AH,2
	MOV		DL,10
	INT		21h
	MOV		DL,13
	INT		21h
	
	POP		DX
	POP		AX
	RET
PR_NewLine	ENDP




START:
	MOV		AX,Data
	MOV		DS,AX
	
	CALL	Funcs	;печатаем меню при запуске
	
	LEnter_Loop:
		;CALL	PR_NewLine	;печатаем приглашение
		CALL	PR_NewLine	;печатаем приглашение
		MOV		AH,9
		LEA		DX,sEnter
		INT		21h
		
		
		MOV		AH,8		;ввод символа без эха
		INT		21h
		CMP		AL,'8'
		JA		LEnter_Loop	;требуем ввести цифру, если >8!
		CMP		AL,'0'
		JB		LEnter_Loop	;требуем ввести цифру, если <0!
		MOV		AH,2		;печатаем введенную цифру
		MOV		DL,AL
		INT		21h
		CALL	PR_NewLine
		
		MOV		BL,AL
		SUB		BL,'0'
		
		CMP		BL,8	;смотрим, какую цифру ввЄл юзер
		JE		LEnd	;если 8 - то абандон тред
		
		ADD		BL,BL	; удваиваем цифру, потому что адрес двухбайтовый
		MOV		BH,0
		
		CMP		BL,2		;если юзер запросил печать ’, то передадим ’ через стек в функцию
		JBE		LSkip_Push
			PUSH	X
		LSkip_Push:
		
		CALL	Funcs[BX]	;вызываем нужную функцию из массива
		
		CMP		BL,2		;если юзер запрашивал печать ’, то почистим стек
		JBE		LSkip_Pop
			ADD		SP,2
		LSkip_Pop:
		
		CMP		BL,2		;если юзер вводил число
		JNE		LEnter_Loop	;то загрузим это число в пам€ть
			MOV		X,AX
		
		
	JMP		LEnter_Loop
	
	; выход ~~~~~~~~~~~~~~~~~~
	LEnd:
	MOV		AH,4Ch
	MOV		AL,0
	INT		21h

Code	ENDS




Stack	SEGMENT STACK
	DW	128h DUP (?)
Stack	ENDS

	END START