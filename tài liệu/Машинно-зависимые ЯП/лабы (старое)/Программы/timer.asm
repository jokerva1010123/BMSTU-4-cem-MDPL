; системные часы
; получает системное время через INT 1Ah, преобразует его в печатабельную версию и печатает


Data	SEGMENT
					
Data	ENDS


Code	SEGMENT
	ASSUME CS:Code, DS:Data, SS:Stack
PR_Start:
	MOV		AX,Data
	MOV		DS,AX
	
	Timer	PROC	NEAR
	TM_Start:	
		;INT 1Ah работает с часами в зависимости от того что будет в AH
		MOV AH,2h		; будем считывать время из часов CMOS
		INT 1Ah			; 1А используется потому что он возвращает время в двоично-десятичном виде, удобно работать сдвигами
		;время на выход выдается в коде BCD, CX=1243h == 12:43
		;CH - часы, CL - минуты, DH - секунды, CF=1 если часы не работают
		
		;обрабатываем количество часов
		MOV BX,CX		
		MOV CL,4	;сдвигаем содержимое BH на 4 символа вправо, 2^4 == 16 - т.е. цифры 16ричного числа "передвинутся" вправо
		SHR BH,CL 	;1A превратится в 0A, 23 в 03 и так далее

		;теперь в BH лежит "количество десятков" часов (для времени 14:47:52 BH==1), печатаем эту цифру
		MOV AH,2h
		MOV DL,BH
		ADD DL,'0'
		INT 21h
		
		;в CH всё ещё лежит количество часов (14)
		AND CH,1111b	;первая цифра CH становится 0; теперь в CX лежит "количество единиц" часов (4), печатаем эту цифру
		MOV DL,CH
		ADD DL,'0'
		INT 21h
		MOV DL,':' ;печатаем разделитель времени
		INT 21h
		
		;обрабатываем количество минут
		;в BL у нас оставалось количество минут (47), сохраняем его в BH и CH
		MOV BH,BL
		MOV CH,BH
		SHR BH,CL ;повторяем процедуру сдвига
		
		;в BH остается "количество десятков" минут (4), печатаем его
		MOV AH,2h
		MOV DL,BH
		ADD DL,'0'
		INT 21h

		;аналогично, первая цифра CH в 0, остается "количество единиц" минут (7), печатаем
		AND CH,1111b
		MOV DL,CH
		ADD DL,'0'
		INT 21h
		MOV DL,':'
		INT 21h
		
		;обрабатываем количество секунд
		; в DH оставалось количество секунд (52), сохраняем его в BH и CH
		MOV BH,DH
		MOV CH,BH
		SHR BH,CL ;повторяем сдвиг,

		;в BH остаются десятки секунд (1(5)), печатаем
		MOV AH,2h
		MOV DL,BH
		ADD DL,'0'
		INT 21h

		;обнуляем первую цифру CH 0, остаются единицы секунд (2)), печатаем
		AND CH,1111b
		MOV DL,CH
		ADD DL,'0'
		INT 21h
		
		;переводим каретку в начало строки
		MOV DL,13
		INT 21h

		JMP TM_Start
	Timer	ENDP
	MOV AH,4Ch
	INT 21h
Code	ENDS


Stack	SEGMENT	STACK
	DW	128h DUP (?)
Stack	ENDS


END PR_Start