Microsoft (R) Macro Assembler Version 5.10                  11/20/13 16:22:4
                                                             Page     1-1


       1				;3.b. Составить в соответствии с алгори
					тмом рекурсивную процедуру void TREE(in
					t *U)
       2				;выводящую значения полей Х узлов дерев
					а. Узел дерева должен иметь поля типа W
					ORD,
       3				;представленные в подпрограмме симво-ли
					ческими именами :
       4				;V – указатель на родителя (для корня д
					ерева = 0),
       5				;X – данные в узле: номер узла 0..9,A..
					Z и значение в узле 0..9,A..Z,
       6				;L – указатель на левого наследника (дл
					я листа дерева = 0),
       7				;R – указатель на правого наследника (д
					ля листа дерева = 0).
       8				;	void tree(int* A)
       9				;	{
      10				;		printf(A+2) //печатаем 
					текущее значение
      11				;		if *(A+4) != 0 //если е
					сть левая ветка
      12				;			tree(A+4) //иде
					м в левую ветку
      13				;		if *(A+6) != 0 //и если
					 есть правая ветка
      14				;			tree(A+6) //то 
					идем в правую ветку
      15				;	}
      16				;Для отладки программы дерево описать в
					 начале сегмента данных (U0, U1,... пре
					дставляют узлы) так:
      17 0000				Data	SEGMENT
      18					
      19 0000  00					DB 	(?) 	
						;костыль, чтобы адрес U0 != 0
      20 0001  0000 3037 0009 R 0011		U0	DW	 0,'07',U1,U2
      21	R			
      22 0009  0001 R 3133 0019 R		U1	DW	U0,'13',U3,U4
      23       0021 R			
      24 0011  0001 R 3239 0029 R		U2	DW	U0,'29',U5,U6
      25       0031 R			
      26 0019  0009 R 3331 0039 R		U3	DW	U1,'31',U7,U8
      27       0041 R			
      28 0021  0009 R 3435 0049 R		U4	DW	U1,'45',U9,UA
      29       0051 R			
      30 0029  0011 R 3538 0000 00		U5	DW	U2,'58', 0, 0
      31       00			
      32 0031  0011 R 3641 0000 00		U6	DW	U2,'6A', 0, 0
      33       00			
      34 0039  0019 R 3730 0000 00		U7	DW	U3,'70', 0, 0
      35       00			
      36 0041  0019 R 3832 0000 0059		U8	DW	U3,'82', 0, UB
      37	R			
Microsoft (R) Macro Assembler Version 5.10                  11/20/13 16:22:4
                                                             Page     1-2


      38 0049  0021 R 3934 0000 00		U9	DW	U4,'94', 0, 0
      39       00			
      40 0051  0021 R 4136 0000 00		UA	DW	U4,'A6', 0, 0
      41       00			
      42 0059  0041 R 4242 0000 00		UB	DW	U8,'BB', 0, 0
      43       00			
      44					
      45 0061  4E 6F 64 65 20 64		sData	DB	'Node data: ','
					$'
      46       61 74 61 3A 20 24	
      47 006D				Data	ENDS
      48				
      49				
      50 0000				Code	SEGMENT
      51					ASSUME CS:Code, DS:Data, SS:Sta
					ck
      52					
      53				;======================================
					====================
      54 0000				PR_ProcessBranch	PROC	NEAR
      55				;-----------------------------
      56				;процедура обрабатывает дерево, начиная
					 с адреса узла, указанного в DX, уходя 
					"вглубь"
      57				;печатаются данные узла (номер и значен
					ие), если есть левая ветвь - то процеду
					ра вначале идет по ней
      58				;-----------------------------
      59 0000  83 FA 00				CMP		DX,0
      60 0003  75 01				JNE		PRPB_WORK ;если
					 нам передали пустоту - ничего не делае
					м, сразу выпрыгиваем обратно
      61 0005  C3					RET
      62 0006					PRPB_Work:
      63					
      64 0006  53				PUSH	BX		;сохран
					яем значение ВХ
      65 0007  8B DA				MOV		BX,DX	;в ВХ б
					удем хранить рабочий адрес, для печати 
					и переадресации вглубь
      66					
      67 0009  8B 57 04				MOV		DX,[BX+4]
								;в ДХ записывае
					м ЗНАЧЕНИЕ ПО АДРЕСУ третьего элемента 
					- адрес для перехода по левой ветке
      68 000C  E8 0000 R			CALL	PR_ProcessBranch
						;вызываем функцию для этого адр
					еса
      69					
      70					;в ВХ лежит адрес узла
      71 000F  B4 02				MOV		AH,2	
							;печать символа
      72 0011  8A 57 03				MOV		DL,[BX+3]
							;печатаем значение узла
Microsoft (R) Macro Assembler Version 5.10                  11/20/13 16:22:4
                                                             Page     1-3


      73 0014  CD 21				INT		21h
      74 0016  8A 57 02				MOV		DL,[BX+2]
							;печатаем номер узла
      75 0019  CD 21				INT		21h
      76 001B  B2 20				MOV		DL,32	
							;\t
      77 001D  CD 21				INT		21h	
      78 001F  BA 0000				MOV		DX,0	
							;восстанавливаем 0 в ДХ
      79					
      80 0022  8B 57 06				MOV		DX,[BX+6]
      81 0025  E8 0000 R			CALL	PR_ProcessBranch
						
      82					;если мы дошли до прохождения п
					равой ветки, то у нас всё уже было напе
					чатано, поэтому возвращаемся
      83					
      84 0028  5B				POP		BX ;функция кон
					чилась - восстанавливаем значение ВХ
      85 0029  C3				RET
      86 002A				PR_ProcessBranch	ENDP
      87				;======================================
					====================
      88				
      89				
      90				
      91 002A				START:
      92 002A  B8 ---- R			MOV		AX,Data
      93 002D  8E D8				MOV		DS,AX
      94					
      95 002F  8D 16 0001 R			LEA		DX,DS:U0
									;заноси
					м в ДХ адрес корня дерева
      96 0033  E8 0000 R			CALL	PR_ProcessBranch
						;POEKHALI!
      97					
      98 0036  B0 00				MOV		AL,0
      99 0038  B4 4C				MOV		AH,4Ch
     100 003A  CD 21				INT		21h
     101 003C				Code	ENDS
     102				
     103				
     104 0000				Stack	SEGMENT STACK
     105 0000  0128[				DW	128h DUP (?)
     106	   ????			
     107			 ]	
     108				
     109 0250				Stack	ENDS
     110				
     111					END START
Microsoft (R) Macro Assembler Version 5.10                  11/20/13 16:22:4
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	003C	PARA	NONE	
DATA . . . . . . . . . . . . . .  	006D	PARA	NONE	
STACK  . . . . . . . . . . . . .  	0250	PARA	STACK	

Symbols:            

                N a m e         	Type	 Value	 Attr

PRPB_WORK  . . . . . . . . . . .  	L NEAR	0006	CODE
PR_PROCESSBRANCH . . . . . . . .  	N PROC	0000	CODE	Length = 002A

SDATA  . . . . . . . . . . . . .  	L BYTE	0061	DATA
START  . . . . . . . . . . . . .  	L NEAR	002A	CODE

U0 . . . . . . . . . . . . . . .  	L WORD	0001	DATA
U1 . . . . . . . . . . . . . . .  	L WORD	0009	DATA
U2 . . . . . . . . . . . . . . .  	L WORD	0011	DATA
U3 . . . . . . . . . . . . . . .  	L WORD	0019	DATA
U4 . . . . . . . . . . . . . . .  	L WORD	0021	DATA
U5 . . . . . . . . . . . . . . .  	L WORD	0029	DATA
U6 . . . . . . . . . . . . . . .  	L WORD	0031	DATA
U7 . . . . . . . . . . . . . . .  	L WORD	0039	DATA
U8 . . . . . . . . . . . . . . .  	L WORD	0041	DATA
U9 . . . . . . . . . . . . . . .  	L WORD	0049	DATA
UA . . . . . . . . . . . . . . .  	L WORD	0051	DATA
UB . . . . . . . . . . . . . . .  	L WORD	0059	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  l5_3		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     95 Source  Lines
     95 Total   Lines
     28 Symbols

  47334 + 455829 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
