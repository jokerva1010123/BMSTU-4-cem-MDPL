Microsoft (R) Macro Assembler Version 5.10                  10/22/13 25:57:0
                                                             Page     1-1


       1				;1.	Составить процедуру упорядочени
					я по возрастанию первых N (N<=60) элеме
					нтов
       2				;символьного массива X методом поиска м
					аксимального элемента. Исходную строку
       3				;и упорядоченную вывести на экран. 
       4				
       5				
       6				
       7 0000				Data	SEGMENT
       8 0000  003C[				X	DB 60 DUP (?)
       9	   ??			
      10			 ]	
      11				
      12 003C  00				N	DB (?)
      13 003D				Data	ENDS
      14				
      15 0000				Code	SEGMENT
      16					ASSUME CS:Code, DS:Data, SS:Sta
					ck
      17 0000				START:
      18 0000  B8 ---- R			MOV	AX,Data
      19 0003  8E D8				MOV	DS,AX
      20					
      21				;тут будет ввод размера N
      22				;	MOV	DL,A		;вывод 
					символа
      23				;	MOV	AH,2
      24				;	INT	21h
      25				;	
      26				;	MOV	AH,7		;ввод с
					имвола
      27				;	INT	21h
      28					
      29				;тут будет ввод элементов
      30				;	MOV		CX, WORD PTR N
      31				;	MOV		SI,0
      32				;	M_ENTER:
      33				;		MOV		AH,7
							;вводим символ
      34				;		INT		21h
      35				;		MOV		DL,AL
							;печатаем символ
      36				;		MOV		AH,2
      37				;		INT		21h
      38				;		SUB		AL,'0'
							;получаем ЧИСЛО из его 
					НОМЕРА
      39				;		MOV		X[SI],A
					L	;записываем число в массив
      40				;		
      41				;		ADD		SI,1
      42				;	LOOP	M_ENTER	;вводим N чисел
					 массива
Microsoft (R) Macro Assembler Version 5.10                  10/22/13 25:57:0
                                                             Page     1-2


      43				
      44 0005  C6 06 003C R 05			MOV		N,5
      45					
      46 000A  C6 06 0000 R 03			MOV		X[0],3
      47 000F  C6 06 0001 R 08			MOV		X[1],8
      48 0014  C6 06 0002 R 01			MOV		X[2],1
      49 0019  C6 06 0003 R 02			MOV		X[3],2
      50 001E  C6 06 0004 R 01			MOV		X[4],1
      51					
      52					;печать-плейсхолдер
      53 0023  B5 00				MOV CH,0
      54 0025  8A 0E 003C R			MOV CL,N
      55 0029  BF 0000 R			MOV DI,OFFSET X
      56 002C					P_1:
      57 002C  B4 02					MOV AH,2
      58 002E  8A 15					MOV DL,[DI]
      59 0030  80 C2 30					ADD DL,'0'
      60 0033  CD 21					INT 21h
      61 0035  B2 20					MOV DL,' '
      62 0037  CD 21					INT 21h
      63 0039  47					INC DI
      64 003A  E2 F0				LOOP P_1
      65 003C  B2 0A				MOV DL,10
      66 003E  CD 21				INT 21h
      67 0040  B2 0D				MOV DL,13
      68 0042  CD 21				INT 21h
      69					
      70 0044  B7 00				MOV		BH,0
      71 0046  8A 1E 003C R			MOV		BL,N	
									;for bl
					=n; bl>0; bl--
      72 004A					S_OUT:	;цикл через BX
      73 004A  B5 00					MOV		CH,0
      74 004C  8A 0E 003C R				MOV		CL,N
      75 0050  80 E9 01					SUB		CL,1
      76 0053  BF 0000					MOV		DI,0
									;for j=
					0; j<=N-1; j++
      77 0056						S_IN: ;цикл через CX
      78 0056  8A 95 0000 R					MOV	
						DL,X[DI]
      79 005A  8A B5 0001 R					MOV	
						DH,X[DI+1]
      80 005E  3A D6						CMP	
						DL,DH			;if X[j
					]>X[j+1]
      81 0060  7E 0C						JLE S_SKIP
      82 0062  8A A5 0000 R						MOV
							AH,X[DI]
      83 0066  86 A5 0001 R						XCHG
						X[DI+1],AH
      84 006A  88 A5 0000 R						MOV
							X[DI],AH
      85 006E							S_SKIP:
Microsoft (R) Macro Assembler Version 5.10                  10/22/13 25:57:0
                                                             Page     1-3


      86 006E  47						INC	
						DI
      87 006F  E2 E5					LOOP S_IN
      88 0071  4B				DEC		BX
      89 0072  75 D6				JNZ		S_OUT
      90					
      91					;печать-плейсхолдер
      92 0074  B5 00				MOV CH,0
      93 0076  8A 0E 003C R			MOV CL,N
      94 007A  BF 0000 R			MOV DI,OFFSET X
      95 007D					P_2:
      96 007D  B4 02					MOV AH,2
      97 007F  8A 15					MOV DL,[DI]
      98 0081  80 C2 30					ADD DL,'0'
      99 0084  CD 21					INT 21h
     100 0086  B2 20					MOV DL,' '
     101 0088  CD 21					INT 21h
     102 008A  47					INC DI
     103 008B  E2 F0				LOOP P_2
     104 008D  B2 0A				MOV DL,10
     105 008F  CD 21				INT 21h
     106 0091  B2 0D				MOV DL,13
     107 0093  CD 21				INT 21h
     108					
     109 0095  B0 00				MOV		AL,0	
						;выход
     110 0097  B4 4C				MOV		AH,4Ch
     111 0099  CD 21				INT		21h
     112				
     113 009B				Code	ENDS
     114				
     115				
     116 0000				Stack	SEGMENT STACK
     117 0000  0128[				DW	128h DUP (?)
     118	   ????			
     119			 ]	
     120				
     121 0250				Stack	ENDS
     122				
     123					END START
Microsoft (R) Macro Assembler Version 5.10                  10/22/13 25:57:0
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	009B	PARA	NONE	
DATA . . . . . . . . . . . . . .  	003D	PARA	NONE	
STACK  . . . . . . . . . . . . .  	0250	PARA	STACK	

Symbols:            

                N a m e         	Type	 Value	 Attr

N  . . . . . . . . . . . . . . .  	L BYTE	003C	DATA

P_1  . . . . . . . . . . . . . .  	L NEAR	002C	CODE
P_2  . . . . . . . . . . . . . .  	L NEAR	007D	CODE

START  . . . . . . . . . . . . .  	L NEAR	0000	CODE
S_IN . . . . . . . . . . . . . .  	L NEAR	0056	CODE
S_OUT  . . . . . . . . . . . . .  	L NEAR	004A	CODE
S_SKIP . . . . . . . . . . . . .  	L NEAR	006E	CODE

X  . . . . . . . . . . . . . . .  	L BYTE	0000	DATA	Length = 003C

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  l5_1		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    117 Source  Lines
    117 Total   Lines
     20 Symbols

  47246 + 459998 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
