Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-1


       1				;				
									
									
								1.	PUTSTR 
					MACRO  STR, LSTR	
       2				;для вывода на экран в символьной форме
					 битовой строки STR заданной длины LSTR
					 в порядке уменьшения номера разряда.
       3				
       4				;				
									
									
								2.	SET1  M
					ACRO  POSBITA, ADRSTR
       5				;выполняющую установку в 1 заданного ра
					зряда битовой строки
       6				
       7				;				
									
									
								3.	KONSTRU
					KTOR   MACRO   STR, LIST	
       8				;выполняющую в битовой строке STR устан
					овку в 1 разрядов, номера которых задан
					ы константами в списке LIST
       9				
      10				;				
									
									
								4.	SET0   
					MACRO   POSBITA, ADRSTR
      11				;выполняющую сброс в 0 заданного разряд
					а битовой строки
      12				
      13				;5.	COUNT   MACRO   STR, LSTR
      14				;выполняющую подсчет числа 1 в разрядах
					 битовой строки
      15				
      16				;				
									
									
								6.	XaddY M
					ACRO   X, Y
      17				;выполняющую объединение битовых строк 
					X:=X U Y
      18				
      19				;				
									
									
								7.	XdelY M
					ACRO   X, Y
      20				;выполняющую вычитание битовых строк X:
					=X \ Y
      21				
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-2


      22				;Использовать эти макросы для выполнени
					я соответствующих работ над битовыми ст
					роками из 26 разрядов, описанными с пом
					ощью директив DB.
      23				
      24 0000				Data	SEGMENT
      25 0000  C3 9C 43 40			X	DB	11000011b, 1001
					1100b, 01000011b, 01000000b
      26 0004  88 88 FF 80			Y	DB	10001000b, 1000
					1000b, 11111111b, 10000000b
      27 0008				Data	ENDS
      28				
      29 0000				Code	SEGMENT
      30					ASSUME CS:Code, DS:Data
      31					
      32				;--------------------------------------
					---------------
      33				;перевод строки
      34				;--------------------------------------
					---------------
      35 0000				PR_NewLine	PROC	NEAR
      36 0000  50				PUSH	AX
      37 0001  52				PUSH	DX
      38					
      39 0002  B4 02				MOV		AH,2
      40 0004  B2 0A				MOV		DL,10
      41 0006  CD 21				INT		21h
      42 0008  B2 0D				MOV		DL,13
      43 000A  CD 21				INT		21h
      44					
      45 000C  5A				POP		DX
      46 000D  58				POP		AX
      47 000E  C3				RET
      48 000F				PR_NewLine	ENDP
      49				;--------------------------------------
					---------------
      50				;--------------------------------------
					---------------------------------------
					---------
      51				;Печатает переменную, переданную через 
					стек, как десятичное число без знака (1
					5 как 15, -15 как 65521)
      52				;--------------------------------------
					---------------------------------------
					---------
      53 000F				PR_Out10	PROC	NEAR
      54 000F  55				PUSH	BP		;переда
					ем параметр
      55 0010  8B EC				MOV		BP,SP
      56 0012  50				PUSH	AX		;исполь
					зуем для деления
      57 0013  52				PUSH	DX
      58 0014  53				PUSH	BX
      59					
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-3


      60 0015  8B 46 04				MOV		AX,[BP+4]
						;получаем в АХ число, которое н
					адо распечатать
      61 0018  BB 000A				MOV		BX,10	
						;делить будем на десять; BX цел
					иком чтобы возникало деление двойного с
					лова (и не возникало переполнения)
      62					
      63					;а теперь, алгоритм следующий: 
					предположим в АХ лежит десятичное 123, 
					тогда вначале мы выделим место под это 
					число,
      64					;то есть > ___ , а потом будем 
					печатать со сдвигом влево: > __3 , > _2
					3 , > 123
      65 001B  50				PUSH	AX	;сохраним АХ, п
					отому что нам его два раза печатать
      66				
      67 001C					LO10_Div1:
      68 001C  BA 0000					MOV		DX,0
      69 001F  F7 F3					DIV		BX
      70 0021  50					PUSH	AX	
							;сохраним значение AX (
					целая часть)
      71 0022  B4 02						MOV	
						AH,2	;печатаем пропуск
      72 0024  B2 61						MOV	
						DL,'a'
      73 0026  CD 21						INT	
						21h
      74 0028  58					POP		AX
							
      75 0029  3D 0000					CMP		AX,0
      76 002C  75 EE				JNE		LO10_Div1
      77					
      78 002E  B4 02				MOV	AH,2
      79 0030  B2 08				MOV DL,8	;делаем один от
					кат назад
      80 0032  CD 21				INT 21h
      81					
      82 0034  58				POP		AX
      83 0035					LO10_Div2:
      84 0035  BA 0000					MOV		DX,0
      85 0038  F7 F3					DIV		BX
      86 003A  50					PUSH	AX	
							;сохраним значение AX (
					целая часть)
      87 003B  B4 02						MOV	
						AH,2
      88 003D  80 C2 30						ADD	
						DL,'0'	;печатаем значение DX (
					остаток)
      89 0040  CD 21						INT	
						21h
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-4


      90 0042  B2 08						MOV	
						DL,8	;смещаемся назад ДВАЖДЫ
      91 0044  CD 21						INT	
						21h
      92 0046  CD 21						INT	
						21h
      93 0048  58					POP		AX
      94 0049  3D 0000					CMP		AX,0
      95 004C  75 E7				JNE		LO10_Div2
      96					
      97					
      98 004E  5B				POP		BX
      99 004F  5A				POP		DX
     100 0050  58				POP		AX
     101 0051  5D				POP		BP
     102 0052  C3				RET
     103 0053				PR_Out10	ENDP
     104				;--------------------------------------
					---------------------------------------
					---------
     105				
     106				
     107				
     108				
     109				
     110				
     111				
     112				
     113				
     114				
     115				
     116				
     117				
     118				
     119				
     120				
     121				
     122				
     123				
     124				
     125				
     126				;--------------------------------------
					---------------
     127				;печать битовой строки
     128				;--------------------------------------
					---------------
     129				PUTSTR	MACRO	STR, LSTR
     130					LOCAL	Lps_Loop1, Lps_Loop2, L
					ps_End
     131					
     132					PUSH	CX	;счетчик
     133					PUSH	DX	;печать
     134					PUSH	AX	;печать
     135					PUSH	BX	;буфер/счетчик
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-5


     136					PUSH	DI	;индекс
     137					
     138					MOV		DI,0
     139					MOV		BH,0	;в BH б
					удем хранить количество распечатанных с
					имволов
     140					;через СТР передаем МАССИВ БАЙТ
					ОВ
     141					Lps_Loop1:
     142						MOV		BL,STR[
					DI]	;получаем DIй элемент этого мас
					сива
     143						MOV		CX,8
     144						Lps_Loop2:	
							;печатаем 8 бит этого э
					лемента
     145							MOV	
						DH,0
     146							MOV	
						DL,BL	;загружаем в DX элемент
     147							DEC	
						CX
     148							SHR	
						DX,CL	;получаем его CLй бит
     149							INC	
						CX
     150							AND	
						DL,0001b;чистим из DL лишние тр
					и бита
     151							ADD	
						DL,'0'	;печатаем CLй бит
     152							MOV	
						AH,2
     153							INT	
						21h
     154							
     155							INC	BH
     156							CMP	BH,LSTR
							;если превысили количес
					тво печати - абандон тред
     157							JE	Lps_End
     158						LOOP	Lps_Loop2
     159						
     160						INC		DI
								;переходим к сл
					едующему элементу массива
     161						CMP		DI,4
							;абандон тред если масс
					ив кончился
     162					JB		Lps_Loop1
     163						
     164					Lps_End:
     165					CALL	PR_NewLine
     166					POP		DI
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-6


     167					POP		BX
     168					POP		AX
     169					POP		DX
     170					POP		CX
     171				ENDM
     172				;--------------------------------------
					---------------
     173				
     174				
     175				
     176				
     177				;--------------------------------------
					---------------
     178				;установка разряда в 1
     179				;--------------------------------------
					---------------
     180				SET1	MACRO	STR, POS
     181					PUSH	DI	;индекс
     182					PUSH	CX	;буфер
     183					PUSH	AX	;буфер
     184					
     185					;через СТР передаем МАССИВ БАЙТ
					ОВ
     186					MOV		DI,3
     187					MOV		AH,0
     188					MOV		AL,POS
     189					
     190					MOV		CX,8	;в AL о
					станется индекс элемента (с конца), в к
					отором лежит разряд,
     191					DIV		CL	
						;в AH - разряд относительно это
					го элемента
     192					MOV		CL,AH	;сохран
					им новый разряд
     193					MOV		AH,0
     194					SUB		DI,AX	;и инде
					кс
     195					
     196					MOV		AH,0
     197					MOV		AL,STR[DI]
						;получаем нужный элемент
     198					MOV		CH,1
     199					SHL		CH,CL	
						;сформируем маску
     200					OR		AL,CH	
						;установим нужный бит
     201					MOV		STR[DI],AL
						;сохраним полученное значение о
					братно в память
     202					
     203					POP		AX
     204					POP		CX
     205					POP		DI	
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-7


     206				ENDM
     207				;--------------------------------------
					---------------
     208				
     209				
     210				
     211				
     212				;--------------------------------------
					---------------
     213				;установка в 1 разрядов из LIST
     214				;--------------------------------------
					---------------
     215				KONSTRUKTOR	MACRO	STR, LIST
     216					IRP BIT,<LIST>
     217						SET1 STR, BIT
     218					ENDM
     219				ENDM
     220				;--------------------------------------
					---------------
     221				
     222				
     223				
     224				
     225				;--------------------------------------
					---------------
     226				;поиск количества единиц и возвращение 
					их в AX
     227				;--------------------------------------
					---------------
     228				COUNT MACRO   STR, LSTR
     229					LOCAL	Lc_Loop1, Lc_Loop2, Lc_
					End, Lc_Skip
     230					
     231					PUSH	CX	;счетчик
     232					PUSH	BX	;буфер/счетчик
     233					PUSH	DI	;индекс
     234					PUSH	AX
     235					
     236					MOV		AX,0
     237					MOV		DI,0
     238					MOV		BH,0	;в BH б
					удем хранить количество пройденных симв
					олов
     239					;через СТР передаем МАССИВ БАЙТ
					ОВ
     240					Lc_Loop1:
     241						MOV		BL,STR[
					DI]	;получаем DIй элемент этого мас
					сива
     242						MOV		CX,8
     243						Lc_Loop2:	
							;анализируем 8 бит этог
					о элемента
     244							PUSH	CX
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-8


     245							MOV	
						CX,1
     246							SHL	
						BL,CL	;выдвигаем крайний слев
					а бит
     247							POP	
						CX
     248							JNC	
						Lc_Skip	;если выдвинули 1 - то 
					запомним это
     249								INC
							AX
     250							Lc_Skip:
     251							INC	BH
     252							CMP	BH,LSTR
							;если превысили количес
					тво поиска - абандон тред
     253							JE	Lc_End
     254						LOOP	Lc_Loop2
     255						
     256						INC		DI
								;переходим к сл
					едующему элементу массива
     257						CMP		DI,4
							;абандон тред если масс
					ив кончился
     258					JB		Lc_Loop1
     259						
     260					Lc_End:
     261					PUSH	AX
     262					CALL	PR_Out10
     263					ADD		SP,2
     264					CALL	PR_NewLine
     265					
     266					POP		AX
     267					POP		DI
     268					POP		BX
     269					POP		CX
     270				ENDM
     271				;--------------------------------------
					---------------
     272				
     273				
     274				;--------------------------------------
					---------------
     275				;установка разряда в 0
     276				;--------------------------------------
					---------------
     277				SET0	MACRO	STR, POS
     278					PUSH	DI	;индекс
     279					PUSH	CX	;буфер
     280					PUSH	AX	;буфер
     281					
     282					;через СТР передаем МАССИВ БАЙТ
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-9


					ОВ
     283					MOV		DI,3
     284					MOV		AH,0
     285					MOV		AL,POS
     286					
     287					MOV		CX,8	;в AL о
					станется индекс элемента (с конца), в к
					отором лежит разряд,
     288					DIV		CL	
						;в AH - разряд относительно это
					го элемента
     289					MOV		CL,AH	;сохран
					им новый разряд
     290					MOV		AH,0
     291					SUB		DI,AX	;и инде
					кс
     292					
     293					MOV		AH,0
     294					MOV		AL,STR[DI]
						;получаем нужный элемент
     295					MOV		CH,11111110b
     296					ROL		CH,CL	
						;сформируем маску
     297					AND		AL,CH	
						;установим нужный бит
     298					MOV		STR[DI],AL
						;сохраним полученное значение о
					братно в память
     299					
     300					POP		AX
     301					POP		CX
     302					POP		DI	
     303				ENDM
     304				;--------------------------------------
					---------------
     305				
     306				
     307				;--------------------------------------
					---------------
     308				;объединение строк X= X U Y
     309				;--------------------------------------
					---------------
     310				XaddY MACRO   X, Y
     311					LOCAL	Lxay_Loop
     312					PUSH	DI	;индекс
     313					PUSH	AX	;буфер
     314					
     315					MOV		DI,0
     316					;через Х и У передаем МАССИВЫ Б
					АЙТОВ
     317					Lxay_Loop:
     318						MOV		AH,X[DI
					]	;получаем DIй элемент массива Х
     319						MOV		AL,Y[DI
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-10


					]	;получаем DIй элемент массива У
     320						OR		AH,AL
     321						MOV		X[DI],A
					H
     322						INC		DI
								;переходим к сл
					едующему элементу массива
     323						CMP		DI,4
							;абандон тред если масс
					ив кончился
     324					JB		Lxay_Loop
							
     325					
     326					POP		AX
     327					POP		DI
     328				ENDM
     329				;--------------------------------------
					---------------
     330				
     331				
     332				;--------------------------------------
					---------------
     333				;разность строк X= X \ Y
     334				;--------------------------------------
					---------------
     335				XdelY MACRO   X, Y
     336					LOCAL	Lxdy_Loop
     337					PUSH	DI	;индекс
     338					PUSH	AX	;буфер
     339					PUSH	BX	;буфер
     340					
     341					MOV		DI,0
     342					;через Х и У передаем МАССИВЫ Б
					АЙТОВ
     343					Lxdy_Loop:
     344						MOV		AH,X[DI
					]	;получаем DIй элемент массива Х
     345						MOV		BH,AH
     346						MOV		AL,Y[DI
					]	;получаем DIй элемент массива У
     347						XOR		AH,AL
     348						AND		AH,BH
     349						MOV		X[DI],A
					H
     350						INC		DI
								;переходим к сл
					едующему элементу массива
     351						CMP		DI,4
							;абандон тред если масс
					ив кончился
     352					JB		Lxdy_Loop
							
     353					
     354					POP		BX
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-11


     355					POP		AX
     356					POP		DI
     357				ENDM
     358				;--------------------------------------
					---------------
     359				
     360				
     361				
     362				
     363				
     364				
     365				
     366					
     367 0053				START:
     368 0053  B8 ---- R			MOV		AX,Data
     369 0056  8E D8				MOV		DS,AX
     370					
     371					PUTSTR	X,26
     372 0058  51                    1		PUSH	CX	;счетчик 
     373 0059  52                    1		PUSH	DX	;печать 
     374 005A  50                    1		PUSH	AX	;печать 
     375 005B  53                    1		PUSH	BX	;буфер/счетчик 
     376 005C  57                    1		PUSH	DI	;индекс 
     377 005D  BF 0000               1		MOV		DI,0 
     378 0060  B7 00                 1		MOV		BH,0	;в BH б
					удем хранить количество распечатанных с
					имволов 
     379 0062                        1		??0000: 
     380 0062  8A 9D 0000 R          1			MOV		BL,X[DI
					]	;получаем DIй элемент этого мас
					сива 
     381 0066  B9 0008               1			MOV		CX,8 
     382 0069                        1			??0001:		
						;печатаем 8 бит этого элемента 
     383 0069  B6 00                 1				MOV	
						DH,0 
     384 006B  8A D3                 1				MOV	
						DL,BL	;загружаем в DX элемент
					 
     385 006D  49                    1				DEC	
						CX 
     386 006E  D3 EA                 1				SHR	
						DX,CL	;получаем его CLй бит 
     387 0070  41                    1				INC	
						CX 
     388 0071  80 E2 01              1				AND	
						DL,0001b;чистим из DL лишние тр
					и бита 
     389 0074  80 C2 30              1				ADD	
						DL,'0'	;печатаем CLй бит 
     390 0077  B4 02                 1				MOV	
						AH,2 
     391 0079  CD 21                 1				INT	
						21h 
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-12


     392 007B  FE C7                 1				INC	BH 
     393 007D  80 FF 1A              1				CMP	BH,26
							;если превысили количес
					тво печати - абандон тред 
     394 0080  74 08                 1				JE	??0002 
     395 0082  E2 E5                 1			LOOP	??0001 
     396 0084  47                    1			INC		DI
								;переходим к сл
					едующему элементу массива 
     397 0085  83 FF 04              1			CMP		DI,4
							;абандон тред если масс
					ив кончился 
     398 0088  72 D8                 1		JB		??0000 
     399 008A                        1		??0002: 
     400 008A  E8 0000 R             1		CALL	PR_NewLine 
     401 008D  5F                    1		POP		DI 
     402 008E  5B                    1		POP		BX 
     403 008F  58                    1		POP		AX 
     404 0090  5A                    1		POP		DX 
     405 0091  59                    1		POP		CX 
     406					COUNT	X,26
     407 0092  51                    1		PUSH	CX	;счетчик 
     408 0093  53                    1		PUSH	BX	;буфер/счетчик 
     409 0094  57                    1		PUSH	DI	;индекс 
     410 0095  50                    1		PUSH	AX 
     411 0096  B8 0000               1		MOV		AX,0 
     412 0099  BF 0000               1		MOV		DI,0 
     413 009C  B7 00                 1		MOV		BH,0	;в BH б
					удем хранить количество пройденных симв
					олов 
     414 009E                        1		??0003: 
     415 009E  8A 9D 0000 R          1			MOV		BL,X[DI
					]	;получаем DIй элемент этого мас
					сива 
     416 00A2  B9 0008               1			MOV		CX,8 
     417 00A5                        1			??0004:		
						;анализируем 8 бит этого элемен
					та 
     418 00A5  51                    1				PUSH	CX 
     419 00A6  B9 0001               1				MOV	
						CX,1 
     420 00A9  D2 E3                 1				SHL	
						BL,CL	;выдвигаем крайний слев
					а бит 
     421 00AB  59                    1				POP	
						CX 
     422 00AC  73 01                 1				JNC	
						??0006	;если выдвинули 1 - то 
					запомним эт 
     423 00AE  40                    1					INC
							AX 
     424 00AF                        1				??0006: 
     425 00AF  FE C7                 1				INC	BH 
     426 00B1  80 FF 1A              1				CMP	BH,26
Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Page     1-13


							;если превысили количес
					тво поиска - абандон тред 
     427 00B4  74 08                 1				JE	??0005 
     428 00B6  E2 ED                 1			LOOP	??0004 
     429 00B8  47                    1			INC		DI
								;переходим к сл
					едующему элементу массива 
     430 00B9  83 FF 04              1			CMP		DI,4
							;абандон тред если масс
					ив кончился 
     431 00BC  72 E0                 1		JB		??0003 
     432 00BE                        1		??0005: 
     433 00BE  50                    1		PUSH	AX 
     434 00BF  E8 000F R             1		CALL	PR_Out10 
     435 00C2  83 C4 02              1		ADD		SP,2 
     436 00C5  E8 0000 R             1		CALL	PR_NewLine 
     437 00C8  58                    1		POP		AX 
     438 00C9  5F                    1		POP		DI 
     439 00CA  5B                    1		POP		BX 
     440 00CB  59                    1		POP		CX 
     441					
     442 00CC  B4 4C				MOV		AH,4Ch
     443 00CE  B0 00				MOV		AL,0
     444 00D0  CD 21				INT		21h
     445					
     446 00D2				Code	ENDS
     447				
     448 0000				Stack	SEGMENT	STACK
     449 0000  0128[				DW	128h	DUP (?)
     450	   ????			
     451			 ]	
     452				
     453 0250				Stack	ENDS
     454				
     455				END	START

Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Symbols-1


Macros:

		N a m e			Lines

COUNT  . . . . . . . . . . . . .  	  35
KONSTRUKTOR  . . . . . . . . . .  	   3
PUTSTR . . . . . . . . . . . . .  	  35
SET0 . . . . . . . . . . . . . .  	  21
SET1 . . . . . . . . . . . . . .  	  21
XADDY  . . . . . . . . . . . . .  	  14
XDELY  . . . . . . . . . . . . .  	  18

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	00D2	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0008	PARA	NONE	
STACK  . . . . . . . . . . . . .  	0250	PARA	STACK	

Symbols:            

                N a m e         	Type	 Value	 Attr

LO10_DIV1  . . . . . . . . . . .  	L NEAR	001C	CODE
LO10_DIV2  . . . . . . . . . . .  	L NEAR	0035	CODE

PR_NEWLINE . . . . . . . . . . .  	N PROC	0000	CODE	Length = 000F
PR_OUT10 . . . . . . . . . . . .  	N PROC	000F	CODE	Length = 0044

START  . . . . . . . . . . . . .  	L NEAR	0053	CODE

X  . . . . . . . . . . . . . . .  	L BYTE	0000	DATA

Y  . . . . . . . . . . . . . . .  	L BYTE	0004	DATA

??0000 . . . . . . . . . . . . .  	L NEAR	0062	CODE
??0001 . . . . . . . . . . . . .  	L NEAR	0069	CODE
??0002 . . . . . . . . . . . . .  	L NEAR	008A	CODE
??0003 . . . . . . . . . . . . .  	L NEAR	009E	CODE
??0004 . . . . . . . . . . . . .  	L NEAR	00A5	CODE
??0005 . . . . . . . . . . . . .  	L NEAR	00BE	CODE
??0006 . . . . . . . . . . . . .  	L NEAR	00AF	CODE
@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  l7		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  12/18/13 25:10:1
                                                             Symbols-2



    384 Source  Lines
    454 Total   Lines
     33 Symbols

  47332 + 435351 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
