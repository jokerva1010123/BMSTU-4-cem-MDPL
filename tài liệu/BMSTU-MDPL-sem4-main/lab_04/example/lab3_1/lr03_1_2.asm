PUBLIC output_X
EXTRN X: byte

DS2 SEGMENT AT 0b800h				; начало сегмента AT, 0b800h - где размещаем  Видеопамять текстового режима доступна по адресу B8000h
	CA LABEL byte					;
	ORG 80 * 2 * 2 + 2 * 2			; мы определяем положение на экране нашего символа (т.е. смещаемся на 2 строки по 80 символов по 2 байта в каждОМ,
	SYMB LABEL word					; и еще раз смещаемся на 2 символа по 2 байта. (т е 2 строка 3 столбец)
DS2 ENDS							;директива ORG содержит параметр, указывающий адрес памяти, с которого будет располагаться следующий за этой директивой участок программы

CSEG SEGMENT PARA PUBLIC 'CODE'
	assume CS:CSEG, ES:DS2
output_X proc near					; proc - процедура, near - расстояние(необязательный параметр, по умолчанию near)
	mov ax, DS2						; в сегмент ax кладем адрес сегмента ds2 - 0b800h
	mov es, ax						; в доп сегмент данных кладем адрес сегмента  ds2 (через сегмент ax)
	mov ah, 1   					; тут идет запись в видеопамять, старший байт - атрибуты, то есть
									; 10 == 0A == 00001010, старший бит - 0 == нет мерцания, далее 3 бита 
									; 000 === черный цвет фона в формате RGB, далее 4 бита цвет самого символа
									; старший бит === яркость, младшие 3 === цвет в формате RGB
	mov al, X						; в AL кладем значение X (то есть в младший байт кладем наш символ R)
	mov symb, ax					; в SYMB перемещаем наше полученное выражение 0A52h - инфа про символ
	ret								; возврат к вызывающей стороне 
output_X endp						; конец процедуры
CSEG ENDS							; конец сегмента CSEG
END									; 